apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

def keystoreFile = new File("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystoreFile))

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"

    defaultConfig {
        applicationId "com.smallgame.by2048"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 2
        versionName "1.0"
        multiDexEnabled true
    }

    // 禁止Lint出错导致打包异常终止
    lintOptions {
        disable 'MissingTranslation', 'ExtraTranslation'
        abortOnError false
        ignoreWarnings true
    }

    compileOptions {
//        encoding = 'UTF-8'
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8
    }
    signingConfigs {
        debug {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            //应用编译完成，自定义apk输出位置及文件名
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    //开始输出,自定义输出路径
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        // 输出apk名称为XXX20160328_v1.0.0_vc10_XXXX_test.apk
//                        if (project.hasProperty('ENVIRONMENT_PARA'))
                        def fileName="2048_${variant.productFlavors[0].name}_v${variant.productFlavors[0].versionName}_(${variant.productFlavors[0].versionCode})_${getDate()}.apk"
                        //控制输出的APK的存放路径
                        if (project.hasProperty('OUT_PUT_DIR_PARA')) {
                            File output_dir1 = file("${OUT_PUT_DIR_PARA}");
                            output.outputFile = new File(output_dir1, fileName)
                            println "输出文件位置： " + output.outputFile
                        } else {
                            output.outputFile = new File(outputFile.parent, fileName)
                            println "输出文件位置： " + output.outputFile
                        }
                    }
                }
            }
        }
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }


    productFlavors{
        normal{
            minSdkVersion 19
            targetSdkVersion 26
            versionCode 5
            versionName "1.0"
        }
        special {
            minSdkVersion 19
            targetSdkVersion 26
            versionCode 6
            versionName "1.0"
        }
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    compile 'com.android.support:multidex:1.0.0'
    compile 'com.android.support:recyclerview-v7:26.1.0'
//    compile 'com.facebook.android:audience-network-sdk:5.+'
//    compile(name: 'AudienceNetwork', ext: 'aar')
    compile 'com.facebook.android:audience-network-sdk:5.+'
    compile 'com.facebook.android:facebook-android-sdk:[4,5)'
    compile(name: 'DebugSettings', ext: 'aar')
//    compile "com.google.android.gms:play-services-basement:$project.ANDROID_GOOGLE_PLAY_SERVICES_VERSION"
//    compile project(path: ':popWindowLibrary')
    compile project(path: ':ratinglibrary')
//    implementation 'de.cketti.library.changelog:ckchangelog:1.2.2'
    // TODO: choose correct library and implement it (https://github.com/cketti/ckChangeLog/tree/version_2)
    //implementation 'de.cketti.library.changelog:ckchangelog-legacy-dialog:2.0.0-SNAPSHOT'
    // OR
    //implementation 'de.cketti.library.changelog:ckchangelog-core:2.0.0-SNAPSHOT'
    compile('com.crashlytics.sdk.android:crashlytics:2.9.7@aar') {
        transitive = true;
    }
    compile 'com.crashlytics.sdk.android:crashlytics-ndk:2.0.5'
    compile "com.google.android.gms:play-services-games:11.6.2"
    compile "com.google.android.gms:play-services-auth:11.6.2"
    compile "com.google.android.gms:play-services-base:11.6.2"
}

// 获取格式化时间，用来标识打包时间，同时避免命名冲突
def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyy_MM_dd')
    return formattedDate
}

crashlytics {
    enableNdk true
    androidNdkOut 'src/main/obj'
    androidNdkLibsOut 'src/main/libs'
}
